<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-02T19:22:10 EEST" name="All Test Suite" finished-at="2023-08-02T19:22:18 EEST" duration-ms="8265">
    <groups>
    </groups>
    <test started-at="2023-08-02T19:22:10 EEST" name="Check Login" finished-at="2023-08-02T19:22:18 EEST" duration-ms="8265">
      <class name="testcase.TC01_ChecAuthentication">
        <test-method is-config="true" signature="defineSuiteElements()[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:09 EEST" name="defineSuiteElements" finished-at="2023-08-02T19:22:10 EEST" duration-ms="467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defineSuiteElements -->
        <test-method is-config="true" signature="setBaseURL()[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:10 EEST" name="setBaseURL" finished-at="2023-08-02T19:22:10 EEST" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBaseURL -->
        <test-method signature="checkAuthWithValidData()[pri:1, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:10 EEST" name="checkAuthWithValidData" description="Check Auth with valid input" finished-at="2023-08-02T19:22:13 EEST" duration-ms="3123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAuthWithValidData -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:14 EEST" name="getResult" finished-at="2023-08-02T19:22:14 EEST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuthWithValidData status=SUCCESS method=TC01_ChecAuthentication.checkAuthWithValidData()[pri:1, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkAuthWithInvalidMethod()[pri:2, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:14 EEST" name="checkAuthWithInvalidMethod" finished-at="2023-08-02T19:22:14 EEST" duration-ms="824" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <405> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <405> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at testcase.TC01_ChecAuthentication.checkAuthWithInvalidMethod(TC01_ChecAuthentication.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAuthWithInvalidMethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:14 EEST" name="getResult" finished-at="2023-08-02T19:22:14 EEST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuthWithInvalidMethod status=FAILURE method=TC01_ChecAuthentication.checkAuthWithInvalidMethod()[pri:2, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkAuthWithInvalidPath()[pri:3, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:14 EEST" name="checkAuthWithInvalidPath" finished-at="2023-08-02T19:22:15 EEST" duration-ms="764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAuthWithInvalidPath -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:15 EEST" name="getResult" finished-at="2023-08-02T19:22:15 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuthWithInvalidPath status=SUCCESS method=TC01_ChecAuthentication.checkAuthWithInvalidPath()[pri:3, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkAuthWithInvalidQueryParametr()[pri:4, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:15 EEST" name="checkAuthWithInvalidQueryParametr" finished-at="2023-08-02T19:22:16 EEST" duration-ms="764" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at testcase.TC01_ChecAuthentication.checkAuthWithInvalidQueryParametr(TC01_ChecAuthentication.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAuthWithInvalidQueryParametr -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:16 EEST" name="getResult" finished-at="2023-08-02T19:22:16 EEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuthWithInvalidQueryParametr status=FAILURE method=TC01_ChecAuthentication.checkAuthWithInvalidQueryParametr()[pri:4, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkAuthRequestWithInvalidAuth()[pri:5, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:16 EEST" name="checkAuthRequestWithInvalidAuth" finished-at="2023-08-02T19:22:16 EEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAuthRequestWithInvalidAuth -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:16 EEST" name="getResult" finished-at="2023-08-02T19:22:16 EEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuthRequestWithInvalidAuth status=SUCCESS method=TC01_ChecAuthentication.checkAuthRequestWithInvalidAuth()[pri:5, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkAuthRequestWithInvalidHeader()[pri:6, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:16 EEST" name="checkAuthRequestWithInvalidHeader" finished-at="2023-08-02T19:22:17 EEST" duration-ms="850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAuthRequestWithInvalidHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:17 EEST" name="getResult" finished-at="2023-08-02T19:22:17 EEST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAuthRequestWithInvalidHeader status=SUCCESS method=TC01_ChecAuthentication.checkAuthRequestWithInvalidHeader()[pri:6, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkTokenNotNull()[pri:7, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:17 EEST" name="checkTokenNotNull" description="Check Token not null" finished-at="2023-08-02T19:22:18 EEST" duration-ms="915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTokenNotNull -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:18 EEST" name="getResult" finished-at="2023-08-02T19:22:18 EEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTokenNotNull status=SUCCESS method=TC01_ChecAuthentication.checkTokenNotNull()[pri:7, instance:testcase.TC01_ChecAuthentication@4b6690c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcase.TC01_ChecAuthentication@4b6690c0]" started-at="2023-08-02T19:22:18 EEST" name="tearDown" finished-at="2023-08-02T19:22:18 EEST" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcase.TC01_ChecAuthentication -->
    </test> <!-- Check Login -->
  </suite> <!-- All Test Suite -->
</testng-results>
